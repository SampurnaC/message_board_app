%p#notice= notice
%p
  %strong Title:
  = @topic.title
%p
  %strong Content:
  = @topic.content
%p
  %strong User:
  = @topic.user.email
= link_to 'Edit', edit_topic_path(@topic)
|
= link_to 'Back', topics_path

= @topic.likes.count
- like = current_user.likes.find_by(topic: @topic)
-if like.nil?
  %form{action: "/likes", method: "post"}
    %input{name: "authenticity_token", type: "hidden", value: form_authenticity_token}
    %input{name: "like[topic_id]", type: "hidden", value: "#{@topic.id}"}
    %input{type: "submit", value: "Like"}
- else
  %form{action: "#{like_path(like)}", method: "post"}
    %input{name: "authenticity_token", type: "hidden", value: form_authenticity_token}
    %input{type: "hidden", name: "_method", value: "DELETE"}

    %input{type: "submit", value: "Unlike"}

%h3 Comments:
-#= form_for([@topic, Comment.new]) do |f|
  -#= f.text_area :content
  -#= f.hidden_field :user_id, value: current_user.id if current_user.present?
  -#= f.submit
%form{action: "#{topic_comments_path(@topic)}", method: "post"}
  %input{type: "hidden", name: "authenticity_token", value: form_authenticity_token}
  %textarea{name: "comment[content]", rows: "8", cols: "40"}
  %input{name: "comment[user_id]", type: "hidden", value: "#{current_user.id if current_user.present?}"}
  %input{type: "submit", value: "Submit"}
= render partial: 'comments/comment', collection: @comments.order(id: :desc), :as => :comment
